input {
#     http {
#         port => 8080
#         codec => "json"
#       }
  jdbc {
      jdbc_connection_string => "jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}"
      jdbc_user => "${DB_USERNAME}"
      jdbc_password => "${DB_PASSWORD}"
      jdbc_driver_library => "${DB_DRIVER}"
      jdbc_driver_class => "com.mysql.jdbc.Driver"
      schedule => "*/10 * * * * *" #매 분마다를 의미(cron 표현식)
      clean_run => true #이후엔 false로 바꿔서 돌리기 (원래 logstash에 있던 걸 싹 비운다는 뜻이라고 함)
      statement => "SELECT * FROM profile"
      tracking_column => "id"
      use_column_value => false #변경된 행만 처리할 수 있음. 값이 false면 모든 데이터를 다시 가져와야 할 때 유용. 웬만하면 true로 쓰자
    }
#     jdbc {
#       jdbc_connection_string => "jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}"
#       jdbc_user => "${DB_USERNAME}"
#       jdbc_password => "${DB_PASSWORD}"
#       jdbc_driver_library => "${DB_DRIVER}"
#       jdbc_driver_class => "com.mysql.jdbc.Driver"
#       schedule => "*/5 * * * *"
#       clean_run => true
#       statement => "SELECT * FROM recruitment"
#       tracking_column => "id"
#       use_column_value => true
#     }
}

# output {
#   elasticsearch {
#     hosts => ["localhost:9200"]
#     index => "profile_elasticsearch"
#   }
# }

output {
  elasticsearch {
    hosts => ["localhost:9200"]
    index => "profile_elasticsearch"
    document_id => "%{id}"
  }
}

# output {
#   elasticsearch {
#     hosts => ["localhost:9200"]
#     index => "recruitment_elasticsearch"
#     document_id => "%{recruitment_id}"
#   }
# }